// Code generated by protoc-gen-go.
// source: vector.proto
// DO NOT EDIT!

/*
Package mbtiles is a generated protocol buffer package.

It is generated from these files:
	vector.proto

It has these top-level messages:
	Tile
*/
package mbtiles

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Tile_GeomType int32

const (
	Tile_UNKNOWN    Tile_GeomType = 0
	Tile_POINT      Tile_GeomType = 1
	Tile_LINESTRING Tile_GeomType = 2
	Tile_POLYGON    Tile_GeomType = 3
)

var Tile_GeomType_name = map[int32]string{
	0: "UNKNOWN",
	1: "POINT",
	2: "LINESTRING",
	3: "POLYGON",
}
var Tile_GeomType_value = map[string]int32{
	"UNKNOWN":    0,
	"POINT":      1,
	"LINESTRING": 2,
	"POLYGON":    3,
}

func (x Tile_GeomType) String() string {
	return proto.EnumName(Tile_GeomType_name, int32(x))
}
func (Tile_GeomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Tile struct {
	Layers []*Tile_Layer `protobuf:"bytes,3,rep,name=layers" json:"layers,omitempty"`
}

func (m *Tile) Reset()                    { *m = Tile{} }
func (m *Tile) String() string            { return proto.CompactTextString(m) }
func (*Tile) ProtoMessage()               {}
func (*Tile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Tile) GetLayers() []*Tile_Layer {
	if m != nil {
		return m.Layers
	}
	return nil
}

type Tile_Value struct {
	StringValue string  `protobuf:"bytes,1,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	FloatValue  float32 `protobuf:"fixed32,2,opt,name=float_value,json=floatValue" json:"float_value,omitempty"`
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue" json:"double_value,omitempty"`
	IntValue    int64   `protobuf:"varint,4,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
	UintValue   uint64  `protobuf:"varint,5,opt,name=uint_value,json=uintValue" json:"uint_value,omitempty"`
	SintValue   int64   `protobuf:"zigzag64,6,opt,name=sint_value,json=sintValue" json:"sint_value,omitempty"`
	BoolValue   bool    `protobuf:"varint,7,opt,name=bool_value,json=boolValue" json:"bool_value,omitempty"`
}

func (m *Tile_Value) Reset()                    { *m = Tile_Value{} }
func (m *Tile_Value) String() string            { return proto.CompactTextString(m) }
func (*Tile_Value) ProtoMessage()               {}
func (*Tile_Value) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Tile_Value) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *Tile_Value) GetFloatValue() float32 {
	if m != nil {
		return m.FloatValue
	}
	return 0
}

func (m *Tile_Value) GetDoubleValue() float64 {
	if m != nil {
		return m.DoubleValue
	}
	return 0
}

func (m *Tile_Value) GetIntValue() int64 {
	if m != nil {
		return m.IntValue
	}
	return 0
}

func (m *Tile_Value) GetUintValue() uint64 {
	if m != nil {
		return m.UintValue
	}
	return 0
}

func (m *Tile_Value) GetSintValue() int64 {
	if m != nil {
		return m.SintValue
	}
	return 0
}

func (m *Tile_Value) GetBoolValue() bool {
	if m != nil {
		return m.BoolValue
	}
	return false
}

type Tile_Feature struct {
	Id       uint64        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Tags     []uint32      `protobuf:"varint,2,rep,packed,name=tags" json:"tags,omitempty"`
	Type     Tile_GeomType `protobuf:"varint,3,opt,name=type,enum=mbtiles.Tile_GeomType" json:"type,omitempty"`
	Geometry []uint32      `protobuf:"varint,4,rep,packed,name=geometry" json:"geometry,omitempty"`
}

func (m *Tile_Feature) Reset()                    { *m = Tile_Feature{} }
func (m *Tile_Feature) String() string            { return proto.CompactTextString(m) }
func (*Tile_Feature) ProtoMessage()               {}
func (*Tile_Feature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Tile_Feature) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Tile_Feature) GetTags() []uint32 {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Tile_Feature) GetType() Tile_GeomType {
	if m != nil {
		return m.Type
	}
	return Tile_UNKNOWN
}

func (m *Tile_Feature) GetGeometry() []uint32 {
	if m != nil {
		return m.Geometry
	}
	return nil
}

type Tile_Layer struct {
	Version  uint32          `protobuf:"varint,15,opt,name=version" json:"version,omitempty"`
	Name     string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Features []*Tile_Feature `protobuf:"bytes,2,rep,name=features" json:"features,omitempty"`
	Keys     []string        `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	Values   []*Tile_Value   `protobuf:"bytes,4,rep,name=values" json:"values,omitempty"`
	Extent   uint32          `protobuf:"varint,5,opt,name=extent" json:"extent,omitempty"`
}

func (m *Tile_Layer) Reset()                    { *m = Tile_Layer{} }
func (m *Tile_Layer) String() string            { return proto.CompactTextString(m) }
func (*Tile_Layer) ProtoMessage()               {}
func (*Tile_Layer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *Tile_Layer) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Tile_Layer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tile_Layer) GetFeatures() []*Tile_Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *Tile_Layer) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Tile_Layer) GetValues() []*Tile_Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Tile_Layer) GetExtent() uint32 {
	if m != nil {
		return m.Extent
	}
	return 0
}

func init() {
	proto.RegisterType((*Tile)(nil), "mbtiles.Tile")
	proto.RegisterType((*Tile_Value)(nil), "mbtiles.Tile.Value")
	proto.RegisterType((*Tile_Feature)(nil), "mbtiles.Tile.Feature")
	proto.RegisterType((*Tile_Layer)(nil), "mbtiles.Tile.Layer")
	proto.RegisterEnum("mbtiles.Tile_GeomType", Tile_GeomType_name, Tile_GeomType_value)
}

func init() { proto.RegisterFile("vector.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xdf, 0xaa, 0xd3, 0x40,
	0x10, 0xc6, 0xdd, 0xfc, 0x69, 0x92, 0xc9, 0x69, 0x2d, 0x2b, 0x1e, 0x42, 0x45, 0x5c, 0xcf, 0xd5,
	0xa2, 0x50, 0xb0, 0x3e, 0x80, 0x57, 0x5a, 0x8a, 0x25, 0x3d, 0x8c, 0x55, 0xf1, 0x4a, 0x52, 0x3b,
	0xa7, 0x04, 0xd3, 0x6c, 0x49, 0x36, 0xc5, 0xbc, 0x8a, 0x6f, 0xe3, 0xdb, 0xf8, 0x18, 0x92, 0xcd,
	0xb6, 0xe7, 0x14, 0xef, 0x66, 0xe6, 0xfb, 0x65, 0x32, 0xf3, 0xed, 0xc0, 0xd5, 0x91, 0x7e, 0x68,
	0x55, 0x4d, 0x0f, 0x95, 0xd2, 0x8a, 0x07, 0xfb, 0x8d, 0xce, 0x0b, 0xaa, 0x6f, 0x7e, 0xfb, 0xe0,
	0xad, 0xf3, 0x82, 0xf8, 0x6b, 0x18, 0x14, 0x59, 0x4b, 0x55, 0x9d, 0xb8, 0xc2, 0x95, 0xf1, 0xec,
	0xc9, 0xd4, 0x22, 0xd3, 0x4e, 0x9e, 0x2e, 0x3b, 0x0d, 0x2d, 0x32, 0xf9, 0xcb, 0xc0, 0xff, 0x92,
	0x15, 0x0d, 0xf1, 0x97, 0x70, 0x55, 0xeb, 0x2a, 0x2f, 0x77, 0xdf, 0x8f, 0x5d, 0x9e, 0x30, 0xc1,
	0x64, 0x84, 0x71, 0x5f, 0xeb, 0x91, 0x17, 0x10, 0xdf, 0x15, 0x2a, 0xd3, 0x96, 0x70, 0x04, 0x93,
	0x0e, 0x82, 0x29, 0x9d, 0x7b, 0x6c, 0x55, 0xb3, 0x29, 0xc8, 0x12, 0xae, 0x60, 0x92, 0x61, 0xdc,
	0xd7, 0x7a, 0xe4, 0x19, 0x44, 0x79, 0x79, 0xea, 0xe0, 0x09, 0x26, 0x5d, 0x0c, 0xf3, 0xd2, 0x7e,
	0xff, 0x1c, 0xa0, 0xb9, 0x57, 0x7d, 0xc1, 0xa4, 0x87, 0x51, 0xf3, 0x50, 0xae, 0xef, 0xe5, 0x81,
	0x60, 0x92, 0x63, 0x54, 0x3f, 0x94, 0x37, 0x4a, 0x15, 0x56, 0x0e, 0x04, 0x93, 0x21, 0x46, 0x5d,
	0xc5, 0xc8, 0x93, 0x06, 0x82, 0x0f, 0x94, 0xe9, 0xa6, 0x22, 0x3e, 0x02, 0x27, 0xdf, 0x9a, 0x0d,
	0x3d, 0x74, 0xf2, 0x2d, 0xe7, 0xe0, 0xe9, 0x6c, 0x57, 0x27, 0x8e, 0x70, 0xe5, 0x10, 0x4d, 0xcc,
	0x5f, 0x81, 0xa7, 0xdb, 0x43, 0xbf, 0xc3, 0x68, 0x76, 0x7d, 0x69, 0xe2, 0x9c, 0xd4, 0x7e, 0xdd,
	0x1e, 0x08, 0x0d, 0xc3, 0x27, 0x10, 0xee, 0x48, 0xed, 0x49, 0x57, 0x6d, 0xe2, 0x99, 0x1e, 0xe7,
	0x7c, 0xf2, 0x87, 0x81, 0x6f, 0x3c, 0xe7, 0x09, 0x04, 0x47, 0xaa, 0xea, 0x5c, 0x95, 0xc9, 0x63,
	0xc1, 0xe4, 0x10, 0x4f, 0x69, 0xf7, 0xff, 0x32, 0xdb, 0x9f, 0x3c, 0x37, 0x31, 0x7f, 0x03, 0xe1,
	0x5d, 0x3f, 0x6e, 0x3f, 0x57, 0x3c, 0x7b, 0x7a, 0x39, 0x83, 0x5d, 0x06, 0xcf, 0x58, 0xd7, 0xe6,
	0x27, 0xb5, 0xfd, 0xbb, 0x47, 0x68, 0xe2, 0xee, 0x1a, 0x8c, 0x1f, 0xb5, 0x19, 0xec, 0xbf, 0x6b,
	0x30, 0xd6, 0xa0, 0x45, 0xf8, 0x35, 0x0c, 0xe8, 0x97, 0xa6, 0x52, 0x1b, 0xef, 0x87, 0x68, 0xb3,
	0x9b, 0x77, 0x10, 0x9e, 0x36, 0xe6, 0x31, 0x04, 0x9f, 0xd3, 0x8f, 0xe9, 0xea, 0x6b, 0x3a, 0x7e,
	0xc4, 0x23, 0xf0, 0x6f, 0x57, 0x8b, 0x74, 0x3d, 0x66, 0x7c, 0x04, 0xb0, 0x5c, 0xa4, 0xef, 0x3f,
	0xad, 0x71, 0x91, 0xce, 0xc7, 0x4e, 0xc7, 0xdd, 0xae, 0x96, 0xdf, 0xe6, 0xab, 0x74, 0xec, 0x6e,
	0x06, 0xe6, 0x58, 0xdf, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x0a, 0xb2, 0x72, 0xbc, 0x02,
	0x00, 0x00,
}
